{"code":"import { deserializeRequest, serializeResponse } from '../lib/serializers';\r\nimport { streamResponseBody } from './streamResponseBody';\r\nimport actionTypes from '../lib/actionTypes';\r\nvar SEND_RESPONSE = actionTypes.SEND_RESPONSE;\r\nexport function handleRequest(serializedRequest, port, getResponse) {\r\n    // Deserialize the request.\r\n    var request = deserializeRequest(serializedRequest);\r\n    // Run user's callback fuction.\r\n    return Promise.resolve(getResponse(request)).then(function (response) {\r\n        return serializeResponse(response).then(function (serializedResponse) {\r\n            // Send initial response.\r\n            port.postMessage({\r\n                type: SEND_RESPONSE,\r\n                payload: serializedResponse,\r\n            });\r\n            // Stream the response body, if it exists.\r\n            if (serializedResponse.streamBody) {\r\n                streamResponseBody(response.body.getReader(), port);\r\n            }\r\n        });\r\n    });\r\n}\r\n","references":["/Users/ericsimons/dev/localservice/src/core/interfaces.ts","/Users/ericsimons/dev/localservice/src/core/lib/serializers.ts","/Users/ericsimons/dev/localservice/src/core/controller/streamResponseBody.ts","/Users/ericsimons/dev/localservice/src/core/lib/actionTypes.ts"],"dts":{"name":"/Users/ericsimons/dev/localservice/core/controller/index.d.ts","writeByteOrderMark":false,"text":"import { SerializedRequest } from '../interfaces';\r\nexport declare function handleRequest(serializedRequest: SerializedRequest, port: MessagePort, getResponse: (request: Request) => Response | Promise<Response>): Promise<void>;\r\n"}}
