{"code":"import actionTypes from '../lib/actionTypes';\r\nvar STREAM_PUMP = actionTypes.STREAM_PUMP, STREAM_END = actionTypes.STREAM_END;\r\nexport function streamResponseBody(reader, port) {\r\n    function pump() {\r\n        reader.read().then(function (_a) {\r\n            var done = _a.done, value = _a.value;\r\n            // When no more data needs to be consumed, close the stream\r\n            if (done) {\r\n                port.postMessage({\r\n                    type: STREAM_END,\r\n                });\r\n                return;\r\n            }\r\n            // Enqueue the next data chunk into our target stream\r\n            port.postMessage({\r\n                type: STREAM_PUMP,\r\n                payload: value,\r\n            });\r\n            return pump();\r\n        });\r\n    }\r\n    // Start the pump\r\n    pump();\r\n}\r\n","references":["/Users/ericsimons/dev/localservice/src/core/lib/actionTypes.ts"],"dts":{"name":"/Users/ericsimons/dev/localservice/core/controller/streamResponseBody.d.ts","writeByteOrderMark":false,"text":"export declare function streamResponseBody(reader: any, port: any): void;\r\n"}}
